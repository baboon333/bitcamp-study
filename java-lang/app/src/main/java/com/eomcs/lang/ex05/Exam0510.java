package com.eomcs.lang.ex05;  //쓰다 말음!!!!!!!!!!!

//# 조건 연산자 => ? :
//
public class Exam0510 {
  public static void main(String[] args) {
    // 조건연산자
    // => 조건 ? 표현식1 : 표현식2
    // => 조건이 참이면 표현식1을 실행하고,
    //    조건이 거짓이면 표현식2를 실행한다.
    // => 표현식(expression)
    // 
    //
    int age = 20;

    // 조건 연산자는 할당 연산자(=)의 왼편에 변수를 선언해야 한다.
    // => 선언하지 않으면 문법 오류!
    //    (age > 18) ? System.out.println("성인이다.") : System.out.println("미성년자이다.");

    // 조건 연산자의 결과 값이 왼편의 변수 타입과 일치해야 한다.
    // => 결과 값이 없거나 타입이 일치하지 않으면 문법 오류!
    //String str = (age > 18) ? System.out.println("성인이다.") : System.out.println("미성년자이다.");

    // 표현식 자리에는 문자가 되었든 숫자가 되었든 
    // 실행 결과가 놓여져야 한다.
    // 위의 System.out.println(...) 문장은 결과를 리턴하지 않는다. 얘는 void이다! 삼항 연산자 뒤에 void는 안된다! 
    // 그래서 컴파일 오류이다.

    String message = (age > 18) ? "성년" : "미성년";
    System.out.printf("나이 %d는(은) %s이다.\n", age, message);

    //조건연산자에서 ":" 좌우의 값은 반드시 표현식(expression)이어야 한다.
    //그리고 왼쪽은 그 값을 받는 변수이어야 한다.
    //또는 메서드의 파라미터여야 한다.
    //다 못씀!!!
    String message = (age > 18) ? "성년" : "미성년";
  }
}

// 표현식(expression)?
// - 작업을 수행한 후 결과를 리턴하는 문장이다.
//
// 문장(statement)?
// - 작업을 수행시키는 명령이다.
//
// 문장과 표현식의 관계
// - statement 중에서 결과를 리턴하는 statement를 expression이라 부른다.
//

// 왜 스피커에는 화면이 안나옵니까? 질문과 똑같다. 스피커는 화면이 출력되게끔 안만들어졌으니까...소리는 날지 몰라도 화면이 출력 안되게 만들어짐
// 값을 받아서 콘솔창에 출력하는거지, 작업을 시킨 쪽에 리턴하는게 아니다! 그니까 void인 거임. 함수에 마우스 갖다 대서 void라고 되어 있으면 리턴 안해주는 함수고 int 면 리턴해주는 거임 
//리턴값이 없는거는 일반 문장이다. 식이 아니라 
//println은 작업을 실행한 후 값을 리턴하지 않는다. 콘솔창에 출력할 뿐이지! 그래서 받을 수가 없다!! int result = 이렇게 값을 받을 수 없다!!
//void는 값을 리턴하지 않는다.




